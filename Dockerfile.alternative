# Alternative Dockerfile approach - copy everything first, then install
FROM apify/actor-node:20

# Set working directory
WORKDIR /usr/src/app

# Copy everything first
COPY . ./

# Install Chromium and system dependencies first
RUN echo "Installing system dependencies..." \
 && apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    git \
 && rm -rf /var/cache/apk/* \
 && echo "System dependencies installed"

# Set environment variables for Puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
ENV NODE_ENV=production

# Install npm dependencies with retries
RUN echo "Cleaning npm cache..." \
 && npm cache clean --force \
 && echo "Installing npm dependencies..." \
 && npm install --no-package-lock --verbose || npm install --no-package-lock --verbose || npm install --no-package-lock --force \
 && echo "Dependencies installed, verifying..." \
 && npm list --depth=0 || echo "Some optional dependencies missing but continuing" \
 && echo "Critical modules check:" \
 && node -e "console.log('Puppeteer-extra:', require('puppeteer-extra'))" || echo "Puppeteer-extra missing" \
 && node -e "console.log('Apify:', require('apify'))" || echo "Apify missing"

# Create output directory
RUN mkdir -p output

# Verify the main file exists
RUN ls -la src/ && ls -la src/main.js

# Specify how to launch the Actor
CMD ["node", "src/main.js"]